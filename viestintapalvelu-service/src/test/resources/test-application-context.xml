<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mockito="http://www.mockito.org/spring/mockito" xmlns:cxf="http://cxf.apache.org/core"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
           http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd

           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd

           http://www.mockito.org/spring/mockito classpath:spring/mockito.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
            
	<context:annotation-config />
    <context:component-scan base-package="fi.vm.sade.viestintapalvelu"/>

    <util:map id="poolSizes" key-type="java.lang.String" value-type="java.lang.String">
        <entry key="batchJobs" value="3"/>
        <entry key="threadsPerBatchJob" value="4"/>
        <entry key="reveiverJobs" value="12"/>
        <entry key="otherAsync" value="5"/>
        <entry key="recoveryJobs" value="1"/>
    </util:map>
    <import resource="classpath:spring/executors-config.xml"/>

    <!-- Global CXF provider configuration -->
    <cxf:bus>
        <cxf:properties>
            <entry key="org.apache.cxf.jaxrs.bus.providers">
                <bean class="fi.vm.sade.viestintapalvelu.feature.CustomJsonProvider"/>
            </entry>
            <!--<entry key="org.apache.cxf.jaxrs.bus.providers" key-ref="busProviders"/>-->
        </cxf:properties>
    </cxf:bus>
    <!--<util:list id="busProviders">
        <ref bean="customJsonProvider"/>
    </util:list>
    <bean id="customJsonProvider" class="fi.vm.sade.viestintapalvelu.feature.CustomJsonProvider"/>
    -->
    <bean id="mapper" class="fi.vm.sade.viestintapalvelu.feature.mapper.Mapper"/>
    <bean id="pagingAndSortingDTOConverter" class="fi.vm.sade.converter.PagingAndSortingDTOConverter"/>
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />
    
    <util:map id="optionsCacheConfig" key-type="java.lang.String" value-type="java.lang.Long">
    </util:map>

    <mockito:mock id="dokumenttipalvelu" class="fi.vm.sade.valinta.dokumenttipalvelu.resource.DokumenttiResource" />
    <mockito:mock id="henkiloResourceClient" class="fi.vm.sade.viestintapalvelu.externalinterface.api.HenkiloResource" />
    <mockito:mock id="omattiedotResourceClient" class="fi.vm.sade.viestintapalvelu.externalinterface.api.OmattiedotResource"/>
    <mockito:mock id="organisaatioResourceClient" class="fi.vm.sade.viestintapalvelu.externalinterface.api.OrganisaatioResource"/>
    <mockito:mock id="organisaatioResourceWithoutAuthenticationClient" class="fi.vm.sade.viestintapalvelu.externalinterface.api.OrganisaatioResourceWithoutAuthentication"/>
    <mockito:mock id="emailResourceClient" class="fi.vm.sade.viestintapalvelu.externalinterface.api.EmailResource"/>
    <mockito:mock id="tarjontaHakuResourceClient" class="fi.vm.sade.viestintapalvelu.externalinterface.api.TarjontaHakuResource"/>
    <mockito:mock id="asiointitiliViranomaispalvelutClient" class="fi.suomi.asiointitili.Viranomaispalvelut"/>

    <camelContext xmlns="http://camel.apache.org/schema/spring">
        <contextScan/>
    </camelContext>
    
    <!-- HyperSQL datasource -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">   
        <property name="driverClassName" value="org.hsqldb.jdbc.JDBCDriver"/>    
        <property name="url" value="jdbc:hsqldb:mem:viestinta"/>    
        <property name="username" value="sa"/>    
        <property name="password" value=""/>
    </bean>
    
    <!-- EntityManagerFactory (required by JTA) support -->
    <bean id="emf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" depends-on="dataSourceInitializer">
        <property name="loadTimeWeaver">
            <bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
        </property>
        <property name="persistenceXmlLocation" value="classpath:test-persistence.xml"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="hibernateProperties">
            <props>
                <prop key="javax.persistence.validation.mode">none</prop>
            </props>
        </property>
    </bean>

    <!-- Intializer for creating schema for JUnit testing  -->
    <bean id="dataSourceInitializer" class="org.springframework.jdbc.datasource.init.DataSourceInitializer">
        <property name="dataSource" ref="dataSource" />
        <property name="databasePopulator">
            <bean class="org.springframework.jdbc.datasource.init.ResourceDatabasePopulator">
                <property name="continueOnError" value="true" />
                <property name="scripts">
                    <list>
                        <value>classpath:sql/create_schema_for_junit_tests.sql</value>
                    </list>
                </property>
            </bean>
        </property>
    </bean>     
    
    <!-- transaction manager -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="emf" />
    </bean>

    <!-- enable spring annotation driven transactions -->
    <tx:annotation-driven transaction-manager="transactionManager" />       
</beans>