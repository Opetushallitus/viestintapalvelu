<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:jaxrs-client="http://cxf.apache.org/jaxrs-client"
       xmlns:http="http://cxf.apache.org/transports/http/configuration"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
       http://cxf.apache.org/jaxrs-client http://cxf.apache.org/schemas/jaxrs-client.xsd
       http://cxf.apache.org/transports/http/configuration http://cxf.apache.org/schemas/configuration/http-conf.xsd 
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       http://camel.apache.org/schema/spring-security http://camel.apache.org/schema/spring-security/camel-spring-security.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="fi.vm.sade.ryhmasahkoposti"/>

    <!-- Application and common properties -->
    <context:property-placeholder
            location="classpath:/properties/ryhmasahkopostipalvelu.properties, file:///${user.home:''}/oph-configuration/common.properties, file:///${user.home:''}/oph-configuration/ryhmasahkopostipalvelu.properties, file:///${user.home:''}/oph-configuration/override.properties"
            ignore-resource-not-found="true" properties-ref="defaultProps"/>

    <!-- Authentication and security -->
    <bean id="defaultProps" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="properties">
            <util:properties local-override="true">
                <prop key="cas_mode">front</prop>
                <prop key="cas_key">ryhmasahkoposti</prop>
                <prop key="cas_service">${cas.service.ryhmasahkoposti}</prop>
                <prop key="cas_callback_url">${cas.callback.ryhmasahkoposti}</prop>
                <prop key="spring_security_default_access">isAuthenticated()</prop>
            </util:properties>
        </property>
    </bean>

    <!-- Security configuration  -->
    <import resource="file:///${user.home:''}/oph-configuration/security-context-backend.xml"/>

    <!-- Authentication and authorization support -->

    <bean id="ticketInterceptorTarget" class="fi.vm.sade.generic.ui.portlet.security.SecurityTicketOutInterceptorRest" />
    <bean id="ticketInterceptorRest" class="fi.vm.sade.ryhmasahkoposti.util.LocalDevModeSecurityTicketInterceptorAdapter">
        <property name="target" ref="ticketInterceptorTarget"/>
    </bean>
    <bean id="ticketInterceptorRestInternal" class="fi.vm.sade.ryhmasahkoposti.util.LocalDevModeSecurityTicketInterceptorAdapter">
        <property name="target" ref="ticketInterceptorTarget"/>
        <property name="basicAuthentication" value="${viestintapalvelu.use.dev.basic.authentication:false}"/>
    </bean>

    <authorizationPolicy id="admin" access="isAuthenticated()" authenticationManager="authenticationManager"
                         accessDecisionManager="accessDecisionManager"
                         xmlns="http://camel.apache.org/schema/spring-security"/>

    <!-- External interface OmattiedotResource of HenkiloPalvelu-->
    <jaxrs-client:client id="omattiedotResourceClient"
                         serviceClass="fi.vm.sade.ryhmasahkoposti.externalinterface.api.OmattiedotResource"
                         address="${ryhmasahkopostipalvelu.authenticationService.omattiedot.rest.url}"
                         inheritHeaders="true">
        <jaxrs-client:outInterceptors>
            <ref bean="ticketInterceptorRest"/>
        </jaxrs-client:outInterceptors>
        <jaxrs-client:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
            <bean class="fi.vm.sade.ryhmasahkoposti.externalinterface.common.ObjectMapperProvider"/>
        </jaxrs-client:providers>
    </jaxrs-client:client>

    <!-- External interface AttachmentResource  -->
    <jaxrs-client:client id="attachmentResourceClient"
                         serviceClass="fi.vm.sade.ryhmasahkoposti.externalinterface.api.AttachmentResource"
                         address="${ryhmasahkopostipalvelu.attachmentService.rest.url}" inheritHeaders="true">
        <jaxrs-client:outInterceptors>
            <bean class="fi.vm.sade.ryhmasahkoposti.util.LocalDevModeSecurityTicketInterceptorAdapter">
                <property name="target">
                    <bean class="fi.vm.sade.authentication.cas.CasApplicationAsAUserInterceptor">
                        <property name="webCasUrl" value="${web.url.cas}" />
                        <property name="targetService" value="${cas.service.viestintapalvelu}" />
                        <property name="appClientUsername" value="${ryhmasahkoposti.app.username.to.viestintapalvelu}" />
                        <property name="appClientPassword" value="${ryhmasahkoposti.app.password.to.viestintapalvelu}" />
                    </bean>
                </property>
                <property name="basicAuthentication" value="${viestintapalvelu.use.dev.basic.authentication:false}"/>
                <property name="appClientUsername" value="${ryhmasahkoposti.app.username.to.viestintapalvelu}" />
                <property name="appClientPassword" value="${ryhmasahkoposti.app.password.to.viestintapalvelu}" />
            </bean>
        </jaxrs-client:outInterceptors>
        <jaxrs-client:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
            <bean class="fi.vm.sade.ryhmasahkoposti.externalinterface.common.ObjectMapperProvider"/>
        </jaxrs-client:providers>
    </jaxrs-client:client>

    <!-- External interface HenkiloResource of HenkiloPalvelu -->
    <jaxrs-client:client id="henkiloResourceClient"
                         serviceClass="fi.vm.sade.ryhmasahkoposti.externalinterface.api.HenkiloResource"
                         address="${ryhmasahkopostipalvelu.authenticationService.henkilo.rest.url}"
                         inheritHeaders="true">
        <jaxrs-client:outInterceptors>
            <bean class="fi.vm.sade.authentication.cas.CasApplicationAsAUserInterceptor">
                <property name="webCasUrl" value="${web.url.cas}" />
                <property name="targetService" value="${ryhmasahkopostipalvelu.authenticationService.henkilo.cas.url}" />
                <property name="appClientUsername" value="${ryhmasahkoposti.app.username.to.henkilopalvelu}" />
                <property name="appClientPassword" value="${ryhmasahkoposti.app.password.to.henkilopalvelu}" />
            </bean>
        </jaxrs-client:outInterceptors>
        <jaxrs-client:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
            <bean class="fi.vm.sade.ryhmasahkoposti.externalinterface.common.ObjectMapperProvider"/>
        </jaxrs-client:providers>
    </jaxrs-client:client>

    <!-- External interface OrganisaatioResource of OrganisaatioPalvelu -->
    <jaxrs-client:client id="organisaatioResourceClient"
                         serviceClass="fi.vm.sade.ryhmasahkoposti.externalinterface.api.OrganisaatioResource"
                         address="${ryhmasahkopostipalvelu.organisaatioService.rest.url}" inheritHeaders="true">
        <jaxrs-client:outInterceptors>
            <!-- Ei vaadi kirjautumista -->
            <!--<ref bean="ticketInterceptorRest"/>-->
        </jaxrs-client:outInterceptors>
        <jaxrs-client:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
            <bean class="fi.vm.sade.ryhmasahkoposti.externalinterface.common.ObjectMapperProvider"/>
        </jaxrs-client:providers>
    </jaxrs-client:client>

    <!-- External interface LetterResource  -->
    <jaxrs-client:client id="templateResourceClient"
                         serviceClass="fi.vm.sade.ryhmasahkoposti.externalinterface.api.TemplateResource"
                         address="${ryhmasahkopostipalvelu.templateService.rest.url}" inheritHeaders="true">
        <jaxrs-client:outInterceptors>
            <bean class="fi.vm.sade.ryhmasahkoposti.util.LocalDevModeSecurityTicketInterceptorAdapter">
                <property name="target">
                    <bean class="fi.vm.sade.authentication.cas.CasApplicationAsAUserInterceptor">
                        <property name="webCasUrl" value="${web.url.cas}" />
                        <property name="targetService" value="${cas.service.viestintapalvelu}" />
                        <property name="appClientUsername" value="${ryhmasahkoposti.app.username.to.viestintapalvelu}" />
                        <property name="appClientPassword" value="${ryhmasahkoposti.app.password.to.viestintapalvelu}" />
                    </bean>
                </property>
                <property name="basicAuthentication" value="${viestintapalvelu.use.dev.basic.authentication:false}"/>
                <property name="appClientUsername" value="${ryhmasahkoposti.app.username.to.viestintapalvelu}" />
                <property name="appClientPassword" value="${ryhmasahkoposti.app.password.to.viestintapalvelu}" />
            </bean>
        </jaxrs-client:outInterceptors>
        <jaxrs-client:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
            <bean class="fi.vm.sade.ryhmasahkoposti.externalinterface.common.ObjectMapperProvider"/>
        </jaxrs-client:providers>
    </jaxrs-client:client>

    <!-- Apache Camel route scanner -->
    <camelContext xmlns="http://camel.apache.org/schema/spring">
        <contextScan/>
    </camelContext>

    <!-- Resourcebundle for localizing -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="properties/messages"/>
    </bean>

    <!-- Schedulers -->
    <task:annotation-driven/>

    <!-- Sending emails -->
    <bean id="emailServiceImpl" class="fi.vm.sade.ryhmasahkoposti.service.impl.EmailServiceImpl"></bean>
    <task:executor id="emailExecutor" rejection-policy="ABORT" pool-size="10"/>
    <task:scheduler id="emailScheduler" pool-size="10"/>
    <task:scheduled-tasks scheduler="emailScheduler">
        <task:scheduled ref="emailServiceImpl" method="checkEmailQueues" cron="${ryhmasahkoposti.sender.cron}"/>
    </task:scheduled-tasks>

    <!-- Swagger configuration -->
    <bean id="swaggerConfig" class="com.wordnik.swagger.jaxrs.config.BeanConfig">
        <property name="resourcePackage" value="fi.vm.sade.ryhmasahkoposti.api.resource"/>
        <property name="version" value="1.0.0"/>
        <property name="basePath" value="/ryhmasahkoposti-service"/>
        <property name="title" value="Ryhmasahkoposti resources"/>
        <property name="description" value="Ryhmasahkoposti offered REST resources"/>
        <property name="contact" value="Yllapito 2"/>
        <property name="scan" value="true"/>
    </bean>
</beans>
