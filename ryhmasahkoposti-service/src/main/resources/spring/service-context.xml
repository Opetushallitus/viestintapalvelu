<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:jaxrs-client="http://cxf.apache.org/jaxrs-client"
       xmlns:jaxrs="http://cxf.apache.org/jaxrs"
       xmlns:http="http://cxf.apache.org/transports/http/configuration"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
       http://cxf.apache.org/jaxrs-client http://cxf.apache.org/schemas/jaxrs-client.xsd
       http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
       http://cxf.apache.org/transports/http/configuration http://cxf.apache.org/schemas/configuration/http-conf.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       http://camel.apache.org/schema/spring-security http://camel.apache.org/schema/spring-security/camel-spring-security.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="fi.vm.sade.ryhmasahkoposti"/>

    <import resource="classpath:META-INF/cxf/cxf.xml" />
    <import resource="classpath:META-INF/cxf/cxf-servlet.xml" />

    <!-- Application and common properties -->
    <context:property-placeholder
            location="classpath:/properties/ryhmasahkopostipalvelu.properties, file:///${user.home:''}/oph-configuration/common.properties, file:///${user.home:''}/oph-configuration/ryhmasahkopostipalvelu.properties, file:///${user.home:''}/oph-configuration/override.properties"
            ignore-resource-not-found="true" properties-ref="defaultProps"/>

    <!-- Authentication and security -->
    <bean id="defaultProps" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="properties">
            <util:properties local-override="true">
                <prop key="cas_mode">front</prop>
                <prop key="cas_key">ryhmasahkoposti</prop>
                <prop key="cas_service">${cas.service.ryhmasahkoposti}</prop>
                <prop key="cas_callback_url">${cas.callback.ryhmasahkoposti}</prop>
                <prop key="spring_security_default_access">isAuthenticated()</prop>
            </util:properties>
        </property>
    </bean>

    <!-- Security configuration  -->
    <import resource="file:///${user.home:''}/oph-configuration/security-context-backend.xml"/>

    <!-- Authentication and authorization support -->

	<bean id="sessionCache" class="fi.vm.sade.authentication.cas.CasFriendlyCache">
    </bean>
    
    <bean id="casTicketInterceptor" class="fi.vm.sade.authentication.cas.CasFriendlyCxfInterceptor">
        <property name="useBasicAuthentication" value="${ryhmasahkoposti.dev.use-basic-authentication:false}"/>
        <property name="useSessionPerUser" value="${ryhmasahkoposti.use-session-per-user:true}"/>
        <property name="sessionRequired" value="${ryhmasahkoposti.session-required:true}"/>
        <property name="appClientUsername" value=""/>
        <property name="appClientPassword" value=""/>
    </bean>

    <!-- Application as a user -->
    <bean id="casTicketInterceptorAAU" class="fi.vm.sade.authentication.cas.CasFriendlyCxfInterceptor">
        <property name="useBasicAuthentication" value="${viestintapalvelu.dev.use-basic-authentication:false}"/>
        <property name="useSessionPerUser" value="${ryhmasahkoposti.use-session-per-user:true}"/>
        <property name="sessionRequired" value="${ryhmasahkoposti.session-required:true}"/>
        <property name="appClientUsername" value="${ryhmasahkoposti.app.username.to.viestintapalvelu}" />
        <property name="appClientPassword" value="${ryhmasahkoposti.app.password.to.viestintapalvelu}" />
    </bean>

    <bean id="casTicketInterceptorAsAUser" class="fi.vm.sade.authentication.cas.CasApplicationAsAUserInterceptor">
        <property name="webCasUrl" value="${web.url.cas}" />
        <property name="sessionRequired" value="${ryhmasahkoposti.session-required:true}"/>
        <property name="appClientUsername" value="${ryhmasahkoposti.app.username.to.viestintapalvelu}" />
        <property name="appClientPassword" value="${ryhmasahkoposti.app.password.to.viestintapalvelu}" />
    </bean>



    <authorizationPolicy id="admin" access="isAuthenticated()" authenticationManager="authenticationManager"
                         accessDecisionManager="accessDecisionManager"
                         xmlns="http://camel.apache.org/schema/spring-security"/>

    <bean id="ophRequestHeaders" class="fi.vm.sade.javautils.cxf.OphRequestHeadersCxfInterceptor">
      <property name="clientSubSystemCode" value="viestintapalvelu.ryhmasahkoposti-service.backend"/>
    </bean>

    <!-- External interface AttachmentResource  -->
    <jaxrs-client:client id="attachmentResourceClient"
                         serviceClass="fi.vm.sade.ryhmasahkoposti.externalinterface.api.AttachmentResource"
                         address="${viestintapalvelu.rest.url}" inheritHeaders="true">
        <jaxrs-client:outInterceptors>
            <ref bean="casTicketInterceptorAAU"/>
            <ref bean="ophRequestHeaders"/>
        </jaxrs-client:outInterceptors>
        <jaxrs-client:inInterceptors>
            <ref bean="casTicketInterceptorAAU"/>
        </jaxrs-client:inInterceptors>
        <jaxrs-client:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
            <bean class="fi.vm.sade.externalinterface.common.ObjectMapperProvider"/>
        </jaxrs-client:providers>
    </jaxrs-client:client>

    <!-- External interface HenkiloResource of Oppijanumerorekisteri -->
    <jaxrs-client:client id="oppijanumerorekisteriHenkiloResource"
                         serviceClass="fi.vm.sade.ryhmasahkoposti.externalinterface.api.OppijanumerorekisteriHenkiloResource"
                         address="${oppijanumerorekisteri-service.base}"
                         inheritHeaders="true">
        <jaxrs-client:outInterceptors>
            <ref bean="casTicketInterceptorAsAUser"/>
            <ref bean="ophRequestHeaders"/>
        </jaxrs-client:outInterceptors>
        <jaxrs-client:inInterceptors>
            <ref bean="casTicketInterceptorAAU"/>
        </jaxrs-client:inInterceptors>
        <jaxrs-client:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
            <bean class="fi.vm.sade.externalinterface.common.ObjectMapperProvider"/>
        </jaxrs-client:providers>
    </jaxrs-client:client>

    <!-- External interface HenkiloResource of Käyttöoikeus -->
    <jaxrs-client:client id="kayttooikeusHenkiloResource"
                         serviceClass="fi.vm.sade.ryhmasahkoposti.externalinterface.api.KayttooikeusHenkiloResource"
                         address="${kayttooikeus-service.base}"
                         inheritHeaders="true">
        <jaxrs-client:outInterceptors>
            <ref bean="casTicketInterceptorAAU"/>
            <ref bean="ophRequestHeaders"/>
        </jaxrs-client:outInterceptors>
        <jaxrs-client:inInterceptors>
            <ref bean="casTicketInterceptorAAU"/>
        </jaxrs-client:inInterceptors>
        <jaxrs-client:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
            <bean class="fi.vm.sade.externalinterface.common.ObjectMapperProvider"/>
        </jaxrs-client:providers>
    </jaxrs-client:client>

    <!-- External interface OrganisaatioResource of OrganisaatioPalvelu -->
    <jaxrs-client:client id="organisaatioResourceClient"
                         serviceClass="fi.vm.sade.ryhmasahkoposti.externalinterface.api.OrganisaatioResource"
                         address="${organisaatio-service.rest.url}" inheritHeaders="true">
        <!-- Ei vaadi kirjautumista, eikä siksi cas interceptoria -->
        <jaxrs-client:outInterceptors>
            <ref bean="ophRequestHeaders"/>
        </jaxrs-client:outInterceptors>
        <jaxrs-client:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
            <bean class="fi.vm.sade.externalinterface.common.ObjectMapperProvider"/>
        </jaxrs-client:providers>
    </jaxrs-client:client>

    <!-- External interface BounceResource -->
    <jaxrs-client:client id="bounceResourceClient"
                         serviceClass="fi.vm.sade.ryhmasahkoposti.externalinterface.api.BounceResource"
                         address="${ryhmasahkoposti.bounces.host}" inheritHeaders="true">
        <jaxrs-client:outInterceptors>
            <ref bean="ophRequestHeaders"/>
        </jaxrs-client:outInterceptors>
        <jaxrs-client:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
            <bean class="fi.vm.sade.externalinterface.common.ObjectMapperProvider"/>
        </jaxrs-client:providers>
    </jaxrs-client:client>

    <!-- External interface LetterResource  -->
    <jaxrs-client:client id="templateResourceClient"
                         serviceClass="fi.vm.sade.ryhmasahkoposti.externalinterface.api.TemplateResource"
                         address="${viestintapalvelu.rest.url}" inheritHeaders="true">
        <jaxrs-client:outInterceptors>
            <ref bean="casTicketInterceptorAAU"/>
            <ref bean="ophRequestHeaders"/>
        </jaxrs-client:outInterceptors>
        <jaxrs-client:inInterceptors>
            <ref bean="casTicketInterceptorAAU"/>
        </jaxrs-client:inInterceptors>
        <jaxrs-client:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
            <bean class="fi.vm.sade.externalinterface.common.ObjectMapperProvider"/>
        </jaxrs-client:providers>
    </jaxrs-client:client>

    <!-- Apache Camel route scanner -->
    <camelContext xmlns="http://camel.apache.org/schema/spring">
        <contextScan/>
    </camelContext>

    <!-- Resourcebundle for localizing -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="properties/messages"/>
    </bean>

    <!-- Schedulers -->
    <task:annotation-driven/>

    <!-- Sending emails -->
    <bean id="dailyTaskRunner" class="fi.vm.sade.ryhmasahkoposti.service.DailyTaskRunnerImpl"/>
    <bean id="emailServiceImpl" class="fi.vm.sade.ryhmasahkoposti.service.impl.EmailServiceImpl"/>
    <bean id="emailBounceServiceImpl" class="fi.vm.sade.ryhmasahkoposti.service.impl.EmailBounceServiceImpl">
        <property name="run" value="${ryhmasahkoposti.bounces.run}"/>
    </bean>
    <task:executor id="emailExecutor" rejection-policy="ABORT" pool-size="10"/>
    <task:scheduler id="emailScheduler" pool-size="10"/>
    <task:scheduled-tasks scheduler="emailScheduler">
        <task:scheduled ref="emailServiceImpl" method="checkEmailQueues" cron="${ryhmasahkoposti.sender.cron}"/>
        <task:scheduled ref="dailyTaskRunner" method="runDailyTasks" fixed-delay="86400000" initial-delay="5000"/>
        <task:scheduled ref="emailBounceServiceImpl" method="checkEmailBounces" cron="${ryhmasahkoposti.bounces.cron}" />
    </task:scheduled-tasks>

    <!-- Swagger configuration -->
    <bean id="swaggerConfig" class="com.wordnik.swagger.jaxrs.config.BeanConfig">
        <property name="resourcePackage" value="fi.vm.sade.ryhmasahkoposti.api.resource"/>
        <property name="version" value="1.0.0"/>
        <property name="basePath" value="/ryhmasahkoposti-service"/>
        <property name="title" value="Ryhmasahkoposti resources"/>
        <property name="description" value="Ryhmasahkoposti offered REST resources"/>
        <property name="contact" value="Yllapito 2"/>
        <property name="scan" value="true"/>
    </bean>

    <bean id="swaggerResourceJSON" class="com.wordnik.swagger.jaxrs.listing.ApiListingResourceJSON"/>

    <!-- Swagger writers -->
    <bean id="resourceWriter" class="com.wordnik.swagger.jaxrs.listing.ResourceListingProvider" scope="singleton"/>
    <bean id="apiWriter" class="com.wordnik.swagger.jaxrs.listing.ApiDeclarationProvider" scope="singleton"/>

    <bean id="jsonProvider" class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider" />

    <bean id="jackson-feature" class="fi.vm.sade.ryhmasahkoposti.feature.JacksonFeature"/>

    <jaxrs:server id="ryhmasahkopostiResources">
        <jaxrs:serviceBeans>
            <ref bean="DraftResourceImpl"/>
            <ref bean="EmailResourceImpl"/>
            <ref bean="MessageReportingResourceImpl"/>
            <ref bean="swaggerResourceJSON"/>
        </jaxrs:serviceBeans>
        <jaxrs:providers>
            <ref bean="jackson-feature"/>
            <ref bean="resourceWriter" />
            <ref bean="apiWriter" />
        </jaxrs:providers>
    </jaxrs:server>
</beans>
