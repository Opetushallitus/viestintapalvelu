<?xml version="1.0" encoding="UTF-8"?>
<project name="deploy-to-remote-tomcat" basedir="." default="deploy-to-remote-tomcat">

    <target name="deploy-to-remote-tomcat">

        <!--
shell command:
#ant -Dtomcat-host=luokka -Dtomcat-port=8311
-->
        <property name="oph.name" value="viestintapalvelu"/>
        <property name="viestintapalvelu.service.pom.version" value="8.0-SNAPSHOT"/>
        <property name="ryhmasahkoposti.service.pom.version" value="9.8-SNAPSHOT"/>
        <property name="viestintapalvelu.ui.pom.version" value="9.8-SNAPSHOT"/>
		
        <property name="maven.repo" value="${user.home}/.m2/repository"/>
        <property name="tomcat.name" value="tomcat_${oph.name}"/>
        <property name="tomcat.home" value="/data00/oph/${oph.name}/tomcat"/>
        <property name="ssh.keyfile" location="${user.home}/.ssh/id_rsa"/>
        <property name="ssh.keypass" value=""/>

        <echo>Stop Tomcat</echo>
        <sshexec command="/data00/oph/tomcat/ophtomcat ${oph.name} stop"
                 host="${tomcat-host}" username="tomcat" keyfile="${ssh.keyfile}"
                 passphrase="${ssh.keypass}" trust="true" failonerror="false"/>

        <echo>Wait Tomcat to stop...</echo>
        <waitfor maxwait="30000" checkevery="500">
            <not>
                <socket server="${tomcat-host}" port="${tomcat-port}"/>
            </not>
        </waitfor>
        <echo>Tomcat stopped.</echo>

        <echo>Clean Tomcat</echo>
        <sshexec command="rm -rf ${tomcat.home}/webapps/* ${tomcat.home}/work/* ${tomcat.home}/temp/*"
                 host="${tomcat-host}" username="tomcat" keyfile="${ssh.keyfile}"
                 passphrase="${ssh.keypass}" trust="true" failonerror="false"/>

        <echo>Copy files to server...</echo>
        <scp todir="tomcat@${tomcat-host}:${tomcat.home}/webapps/"
             keyfile="${ssh.keyfile}" passphrase="${ssh.keypass}">

            <fileset dir="${maven.repo}/fi/vm/sade/viestintapalvelu/viestintapalvelu-service/${viestintapalvelu.service.pom.version}">
                <include name="*.war"/>
            </fileset>

            <fileset dir="${maven.repo}/fi/vm/sade/ryhmasahkoposti/ryhmasahkoposti-service/${ryhmasahkoposti.service.pom.version}">
                <include name="*.war"/>
            </fileset>

            <fileset dir="${maven.repo}/fi/vm/sade/ryhmasahkoposti/viestintapalvelu-ui/${viestintapalvelu.ui.pom.version}">
                <include name="*.war"/>
            </fileset>

        </scp>

        <echo>unzip war-files to tom webapp dir...</echo>
        <sshexec command="
mkdir -p ${tomcat.home}/webapps/viestintapalvelu;
mkdir -p ${tomcat.home}/webapps/viestintapalvelu-ui;
mkdir -p ${tomcat.home}/webapps/ryhmasahkoposti-service;

unzip -qo -d${tomcat.home}/webapps/viestintapalvelu ${tomcat.home}/webapps/viestintapalvelu*.war;
unzip -qo -d${tomcat.home}/webapps/viestintapalvelu-ui ${tomcat.home}/webapps/viestintapalvelu-ui*.war;
unzip -qo -d${tomcat.home}/webapps/ryhmasahkoposti-service ${tomcat.home}/webapps/ryhmasahkoposti-service*.war;

rm -rf ${tomcat.home}/webapps/*.war;"

                 host="${tomcat-host}" username="tomcat" keyfile="${ssh.keyfile}"
                 passphrase="${ssh.keypass}" trust="true" failonerror="false"/>

<echo>Remove extra log4j config-files</echo>
<sshexec command="find ${tomcat.home} -name 'log4j.properties' -exec rm -rf {} \;"
                 host="${tomcat-host}" username="tomcat" keyfile="${ssh.keyfile}"
                 passphrase="${ssh.keypass}" trust="true" failonerror="false" />

        <echo>Start Tomcat</echo>
        <sshexec command="/data00/oph/tomcat/ophtomcat ${oph.name} start"
                 host="${tomcat-host}" username="tomcat" keyfile="${ssh.keyfile}"
                 passphrase="${ssh.keypass}" trust="true" failonerror="false"/>

        <echo>Wait for service http-url</echo>
        <waitfor maxwait="30000" checkevery="500">
            <http url="http://${tomcat-host}:${tomcat-port}/viestintapalvelu"/>
        </waitfor>
        <fail message="App did not come up. Check your log files, fix and try again. Good Luck :-).">
            <condition>
                <not>
                    <http url="http://${tomcat-host}:${tomcat-port}/viestintapalvelu/buildversion.txt"/>
                </not>
            </condition>
        </fail>

        <echo>Successfully deployed to ${tomcat-host}</echo>
    </target>

</project>

